/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AppearanceNameRouteImport } from './routes/appearance/$name'
import { Route as AdminEpisodeRouteImport } from './routes/admin/episode'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppearanceNameRoute = AppearanceNameRouteImport.update({
  id: '/appearance/$name',
  path: '/appearance/$name',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminEpisodeRoute = AdminEpisodeRouteImport.update({
  id: '/admin/episode',
  path: '/admin/episode',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin/episode': typeof AdminEpisodeRoute
  '/appearance/$name': typeof AppearanceNameRoute
  '/admin': typeof AdminIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/episode': typeof AdminEpisodeRoute
  '/appearance/$name': typeof AppearanceNameRoute
  '/admin': typeof AdminIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin/episode': typeof AdminEpisodeRoute
  '/appearance/$name': typeof AppearanceNameRoute
  '/admin/': typeof AdminIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin/episode' | '/appearance/$name' | '/admin'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin/episode' | '/appearance/$name' | '/admin'
  id: '__root__' | '/' | '/admin/episode' | '/appearance/$name' | '/admin/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminEpisodeRoute: typeof AdminEpisodeRoute
  AppearanceNameRoute: typeof AppearanceNameRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/appearance/$name': {
      id: '/appearance/$name'
      path: '/appearance/$name'
      fullPath: '/appearance/$name'
      preLoaderRoute: typeof AppearanceNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/episode': {
      id: '/admin/episode'
      path: '/admin/episode'
      fullPath: '/admin/episode'
      preLoaderRoute: typeof AdminEpisodeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminEpisodeRoute: AdminEpisodeRoute,
  AppearanceNameRoute: AppearanceNameRoute,
  AdminIndexRoute: AdminIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
