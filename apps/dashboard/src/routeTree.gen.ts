/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TodoImport } from './routes/todo'
import { Route as BookmarksImport } from './routes/bookmarks'
import { Route as IndexImport } from './routes/index'
import { Route as JobSearchIndexImport } from './routes/job-search/index'
import { Route as JobSearchQaImport } from './routes/job-search/qa'

// Create/Update Routes

const TodoRoute = TodoImport.update({
  id: '/todo',
  path: '/todo',
  getParentRoute: () => rootRoute,
} as any)

const BookmarksRoute = BookmarksImport.update({
  id: '/bookmarks',
  path: '/bookmarks',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const JobSearchIndexRoute = JobSearchIndexImport.update({
  id: '/job-search/',
  path: '/job-search/',
  getParentRoute: () => rootRoute,
} as any)

const JobSearchQaRoute = JobSearchQaImport.update({
  id: '/job-search/qa',
  path: '/job-search/qa',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/bookmarks': {
      id: '/bookmarks'
      path: '/bookmarks'
      fullPath: '/bookmarks'
      preLoaderRoute: typeof BookmarksImport
      parentRoute: typeof rootRoute
    }
    '/todo': {
      id: '/todo'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoImport
      parentRoute: typeof rootRoute
    }
    '/job-search/qa': {
      id: '/job-search/qa'
      path: '/job-search/qa'
      fullPath: '/job-search/qa'
      preLoaderRoute: typeof JobSearchQaImport
      parentRoute: typeof rootRoute
    }
    '/job-search/': {
      id: '/job-search/'
      path: '/job-search'
      fullPath: '/job-search'
      preLoaderRoute: typeof JobSearchIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/bookmarks': typeof BookmarksRoute
  '/todo': typeof TodoRoute
  '/job-search/qa': typeof JobSearchQaRoute
  '/job-search': typeof JobSearchIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bookmarks': typeof BookmarksRoute
  '/todo': typeof TodoRoute
  '/job-search/qa': typeof JobSearchQaRoute
  '/job-search': typeof JobSearchIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/bookmarks': typeof BookmarksRoute
  '/todo': typeof TodoRoute
  '/job-search/qa': typeof JobSearchQaRoute
  '/job-search/': typeof JobSearchIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/bookmarks' | '/todo' | '/job-search/qa' | '/job-search'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/bookmarks' | '/todo' | '/job-search/qa' | '/job-search'
  id:
    | '__root__'
    | '/'
    | '/bookmarks'
    | '/todo'
    | '/job-search/qa'
    | '/job-search/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BookmarksRoute: typeof BookmarksRoute
  TodoRoute: typeof TodoRoute
  JobSearchQaRoute: typeof JobSearchQaRoute
  JobSearchIndexRoute: typeof JobSearchIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookmarksRoute: BookmarksRoute,
  TodoRoute: TodoRoute,
  JobSearchQaRoute: JobSearchQaRoute,
  JobSearchIndexRoute: JobSearchIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/bookmarks",
        "/todo",
        "/job-search/qa",
        "/job-search/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/bookmarks": {
      "filePath": "bookmarks.tsx"
    },
    "/todo": {
      "filePath": "todo.tsx"
    },
    "/job-search/qa": {
      "filePath": "job-search/qa.tsx"
    },
    "/job-search/": {
      "filePath": "job-search/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
