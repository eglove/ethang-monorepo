/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TodoRouteImport } from './routes/todo'
import { Route as BookmarksRouteImport } from './routes/bookmarks'
import { Route as IndexRouteImport } from './routes/index'
import { Route as JobSearchIndexRouteImport } from './routes/job-search/index'
import { Route as JobSearchStatsRouteImport } from './routes/job-search/stats'
import { Route as JobSearchQaRouteImport } from './routes/job-search/qa'
import { Route as JobSearchContactRouteImport } from './routes/job-search/contact'

const TodoRoute = TodoRouteImport.update({
  id: '/todo',
  path: '/todo',
  getParentRoute: () => rootRouteImport,
} as any)
const BookmarksRoute = BookmarksRouteImport.update({
  id: '/bookmarks',
  path: '/bookmarks',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const JobSearchIndexRoute = JobSearchIndexRouteImport.update({
  id: '/job-search/',
  path: '/job-search/',
  getParentRoute: () => rootRouteImport,
} as any)
const JobSearchStatsRoute = JobSearchStatsRouteImport.update({
  id: '/job-search/stats',
  path: '/job-search/stats',
  getParentRoute: () => rootRouteImport,
} as any)
const JobSearchQaRoute = JobSearchQaRouteImport.update({
  id: '/job-search/qa',
  path: '/job-search/qa',
  getParentRoute: () => rootRouteImport,
} as any)
const JobSearchContactRoute = JobSearchContactRouteImport.update({
  id: '/job-search/contact',
  path: '/job-search/contact',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/bookmarks': typeof BookmarksRoute
  '/todo': typeof TodoRoute
  '/job-search/contact': typeof JobSearchContactRoute
  '/job-search/qa': typeof JobSearchQaRoute
  '/job-search/stats': typeof JobSearchStatsRoute
  '/job-search': typeof JobSearchIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bookmarks': typeof BookmarksRoute
  '/todo': typeof TodoRoute
  '/job-search/contact': typeof JobSearchContactRoute
  '/job-search/qa': typeof JobSearchQaRoute
  '/job-search/stats': typeof JobSearchStatsRoute
  '/job-search': typeof JobSearchIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/bookmarks': typeof BookmarksRoute
  '/todo': typeof TodoRoute
  '/job-search/contact': typeof JobSearchContactRoute
  '/job-search/qa': typeof JobSearchQaRoute
  '/job-search/stats': typeof JobSearchStatsRoute
  '/job-search/': typeof JobSearchIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/bookmarks'
    | '/todo'
    | '/job-search/contact'
    | '/job-search/qa'
    | '/job-search/stats'
    | '/job-search'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/bookmarks'
    | '/todo'
    | '/job-search/contact'
    | '/job-search/qa'
    | '/job-search/stats'
    | '/job-search'
  id:
    | '__root__'
    | '/'
    | '/bookmarks'
    | '/todo'
    | '/job-search/contact'
    | '/job-search/qa'
    | '/job-search/stats'
    | '/job-search/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BookmarksRoute: typeof BookmarksRoute
  TodoRoute: typeof TodoRoute
  JobSearchContactRoute: typeof JobSearchContactRoute
  JobSearchQaRoute: typeof JobSearchQaRoute
  JobSearchStatsRoute: typeof JobSearchStatsRoute
  JobSearchIndexRoute: typeof JobSearchIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bookmarks': {
      id: '/bookmarks'
      path: '/bookmarks'
      fullPath: '/bookmarks'
      preLoaderRoute: typeof BookmarksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo': {
      id: '/todo'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/job-search/contact': {
      id: '/job-search/contact'
      path: '/job-search/contact'
      fullPath: '/job-search/contact'
      preLoaderRoute: typeof JobSearchContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/job-search/qa': {
      id: '/job-search/qa'
      path: '/job-search/qa'
      fullPath: '/job-search/qa'
      preLoaderRoute: typeof JobSearchQaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/job-search/stats': {
      id: '/job-search/stats'
      path: '/job-search/stats'
      fullPath: '/job-search/stats'
      preLoaderRoute: typeof JobSearchStatsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/job-search/': {
      id: '/job-search/'
      path: '/job-search'
      fullPath: '/job-search'
      preLoaderRoute: typeof JobSearchIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookmarksRoute: BookmarksRoute,
  TodoRoute: TodoRoute,
  JobSearchContactRoute: JobSearchContactRoute,
  JobSearchQaRoute: JobSearchQaRoute,
  JobSearchStatsRoute: JobSearchStatsRoute,
  JobSearchIndexRoute: JobSearchIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
