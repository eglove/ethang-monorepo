/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as NewsRouteImport } from './routes/news'
import { Route as CoursesRouteImport } from './routes/courses'
import { Route as BlogRouteImport } from './routes/blog'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TipsIndexRouteImport } from './routes/tips/index'
import { Route as TipsScrollbarGutterRouteImport } from './routes/tips/scrollbar-gutter'
import { Route as TipsScrollContainersRouteImport } from './routes/tips/scroll-containers'
import { Route as TipsFineGrainedReactRendersRouteImport } from './routes/tips/fine-grained-react-renders'

const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const NewsRoute = NewsRouteImport.update({
  id: '/news',
  path: '/news',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesRoute = CoursesRouteImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogRoute = BlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TipsIndexRoute = TipsIndexRouteImport.update({
  id: '/tips/',
  path: '/tips/',
  getParentRoute: () => rootRouteImport,
} as any)
const TipsScrollbarGutterRoute = TipsScrollbarGutterRouteImport.update({
  id: '/tips/scrollbar-gutter',
  path: '/tips/scrollbar-gutter',
  getParentRoute: () => rootRouteImport,
} as any)
const TipsScrollContainersRoute = TipsScrollContainersRouteImport.update({
  id: '/tips/scroll-containers',
  path: '/tips/scroll-containers',
  getParentRoute: () => rootRouteImport,
} as any)
const TipsFineGrainedReactRendersRoute =
  TipsFineGrainedReactRendersRouteImport.update({
    id: '/tips/fine-grained-react-renders',
    path: '/tips/fine-grained-react-renders',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog': typeof BlogRoute
  '/courses': typeof CoursesRoute
  '/news': typeof NewsRoute
  '/projects': typeof ProjectsRoute
  '/tips/fine-grained-react-renders': typeof TipsFineGrainedReactRendersRoute
  '/tips/scroll-containers': typeof TipsScrollContainersRoute
  '/tips/scrollbar-gutter': typeof TipsScrollbarGutterRoute
  '/tips': typeof TipsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog': typeof BlogRoute
  '/courses': typeof CoursesRoute
  '/news': typeof NewsRoute
  '/projects': typeof ProjectsRoute
  '/tips/fine-grained-react-renders': typeof TipsFineGrainedReactRendersRoute
  '/tips/scroll-containers': typeof TipsScrollContainersRoute
  '/tips/scrollbar-gutter': typeof TipsScrollbarGutterRoute
  '/tips': typeof TipsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/blog': typeof BlogRoute
  '/courses': typeof CoursesRoute
  '/news': typeof NewsRoute
  '/projects': typeof ProjectsRoute
  '/tips/fine-grained-react-renders': typeof TipsFineGrainedReactRendersRoute
  '/tips/scroll-containers': typeof TipsScrollContainersRoute
  '/tips/scrollbar-gutter': typeof TipsScrollbarGutterRoute
  '/tips/': typeof TipsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blog'
    | '/courses'
    | '/news'
    | '/projects'
    | '/tips/fine-grained-react-renders'
    | '/tips/scroll-containers'
    | '/tips/scrollbar-gutter'
    | '/tips'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blog'
    | '/courses'
    | '/news'
    | '/projects'
    | '/tips/fine-grained-react-renders'
    | '/tips/scroll-containers'
    | '/tips/scrollbar-gutter'
    | '/tips'
  id:
    | '__root__'
    | '/'
    | '/blog'
    | '/courses'
    | '/news'
    | '/projects'
    | '/tips/fine-grained-react-renders'
    | '/tips/scroll-containers'
    | '/tips/scrollbar-gutter'
    | '/tips/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogRoute: typeof BlogRoute
  CoursesRoute: typeof CoursesRoute
  NewsRoute: typeof NewsRoute
  ProjectsRoute: typeof ProjectsRoute
  TipsFineGrainedReactRendersRoute: typeof TipsFineGrainedReactRendersRoute
  TipsScrollContainersRoute: typeof TipsScrollContainersRoute
  TipsScrollbarGutterRoute: typeof TipsScrollbarGutterRoute
  TipsIndexRoute: typeof TipsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses': {
      id: '/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/news': {
      id: '/news'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tips/fine-grained-react-renders': {
      id: '/tips/fine-grained-react-renders'
      path: '/tips/fine-grained-react-renders'
      fullPath: '/tips/fine-grained-react-renders'
      preLoaderRoute: typeof TipsFineGrainedReactRendersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tips/scroll-containers': {
      id: '/tips/scroll-containers'
      path: '/tips/scroll-containers'
      fullPath: '/tips/scroll-containers'
      preLoaderRoute: typeof TipsScrollContainersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tips/scrollbar-gutter': {
      id: '/tips/scrollbar-gutter'
      path: '/tips/scrollbar-gutter'
      fullPath: '/tips/scrollbar-gutter'
      preLoaderRoute: typeof TipsScrollbarGutterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tips/': {
      id: '/tips/'
      path: '/tips'
      fullPath: '/tips'
      preLoaderRoute: typeof TipsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/blog' {
  const createFileRoute: CreateFileRoute<
    '/blog',
    FileRoutesByPath['/blog']['parentRoute'],
    FileRoutesByPath['/blog']['id'],
    FileRoutesByPath['/blog']['path'],
    FileRoutesByPath['/blog']['fullPath']
  >
}
declare module './routes/courses' {
  const createFileRoute: CreateFileRoute<
    '/courses',
    FileRoutesByPath['/courses']['parentRoute'],
    FileRoutesByPath['/courses']['id'],
    FileRoutesByPath['/courses']['path'],
    FileRoutesByPath['/courses']['fullPath']
  >
}
declare module './routes/news' {
  const createFileRoute: CreateFileRoute<
    '/news',
    FileRoutesByPath['/news']['parentRoute'],
    FileRoutesByPath['/news']['id'],
    FileRoutesByPath['/news']['path'],
    FileRoutesByPath['/news']['fullPath']
  >
}
declare module './routes/projects' {
  const createFileRoute: CreateFileRoute<
    '/projects',
    FileRoutesByPath['/projects']['parentRoute'],
    FileRoutesByPath['/projects']['id'],
    FileRoutesByPath['/projects']['path'],
    FileRoutesByPath['/projects']['fullPath']
  >
}
declare module './routes/tips/fine-grained-react-renders' {
  const createFileRoute: CreateFileRoute<
    '/tips/fine-grained-react-renders',
    FileRoutesByPath['/tips/fine-grained-react-renders']['parentRoute'],
    FileRoutesByPath['/tips/fine-grained-react-renders']['id'],
    FileRoutesByPath['/tips/fine-grained-react-renders']['path'],
    FileRoutesByPath['/tips/fine-grained-react-renders']['fullPath']
  >
}
declare module './routes/tips/scroll-containers' {
  const createFileRoute: CreateFileRoute<
    '/tips/scroll-containers',
    FileRoutesByPath['/tips/scroll-containers']['parentRoute'],
    FileRoutesByPath['/tips/scroll-containers']['id'],
    FileRoutesByPath['/tips/scroll-containers']['path'],
    FileRoutesByPath['/tips/scroll-containers']['fullPath']
  >
}
declare module './routes/tips/scrollbar-gutter' {
  const createFileRoute: CreateFileRoute<
    '/tips/scrollbar-gutter',
    FileRoutesByPath['/tips/scrollbar-gutter']['parentRoute'],
    FileRoutesByPath['/tips/scrollbar-gutter']['id'],
    FileRoutesByPath['/tips/scrollbar-gutter']['path'],
    FileRoutesByPath['/tips/scrollbar-gutter']['fullPath']
  >
}
declare module './routes/tips/index' {
  const createFileRoute: CreateFileRoute<
    '/tips/',
    FileRoutesByPath['/tips/']['parentRoute'],
    FileRoutesByPath['/tips/']['id'],
    FileRoutesByPath['/tips/']['path'],
    FileRoutesByPath['/tips/']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogRoute: BlogRoute,
  CoursesRoute: CoursesRoute,
  NewsRoute: NewsRoute,
  ProjectsRoute: ProjectsRoute,
  TipsFineGrainedReactRendersRoute: TipsFineGrainedReactRendersRoute,
  TipsScrollContainersRoute: TipsScrollContainersRoute,
  TipsScrollbarGutterRoute: TipsScrollbarGutterRoute,
  TipsIndexRoute: TipsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
