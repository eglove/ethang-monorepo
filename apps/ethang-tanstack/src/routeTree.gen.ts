/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SkillsLazyImport = createFileRoute('/skills')()
const ResumeLazyImport = createFileRoute('/resume')()
const ProjectsLazyImport = createFileRoute('/projects')()
const CoursesLazyImport = createFileRoute('/courses')()
const CertificationsLazyImport = createFileRoute('/certifications')()
const IndexLazyImport = createFileRoute('/')()
const BlogLodashChunkLazyImport = createFileRoute('/blog/lodash-chunk')()
const BlogForcingReactLazyImport = createFileRoute('/blog/forcing-react')()
const BlogSlugLazyImport = createFileRoute('/blog/$slug')()
const AdminUpsertCourseListLazyImport = createFileRoute(
  '/admin/upsert-course-list',
)()

// Create/Update Routes

const SkillsLazyRoute = SkillsLazyImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/skills.lazy').then((d) => d.Route))

const ResumeLazyRoute = ResumeLazyImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/resume.lazy').then((d) => d.Route))

const ProjectsLazyRoute = ProjectsLazyImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/projects.lazy').then((d) => d.Route))

const CoursesLazyRoute = CoursesLazyImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/courses.lazy').then((d) => d.Route))

const CertificationsLazyRoute = CertificationsLazyImport.update({
  id: '/certifications',
  path: '/certifications',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/certifications.lazy').then((d) => d.Route),
)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const BlogLodashChunkLazyRoute = BlogLodashChunkLazyImport.update({
  id: '/blog/lodash-chunk',
  path: '/blog/lodash-chunk',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/blog/lodash-chunk.lazy').then((d) => d.Route),
)

const BlogForcingReactLazyRoute = BlogForcingReactLazyImport.update({
  id: '/blog/forcing-react',
  path: '/blog/forcing-react',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/blog/forcing-react.lazy').then((d) => d.Route),
)

const BlogSlugLazyRoute = BlogSlugLazyImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/blog/$slug.lazy').then((d) => d.Route))

const AdminUpsertCourseListLazyRoute = AdminUpsertCourseListLazyImport.update({
  id: '/admin/upsert-course-list',
  path: '/admin/upsert-course-list',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/admin/upsert-course-list.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/certifications': {
      id: '/certifications'
      path: '/certifications'
      fullPath: '/certifications'
      preLoaderRoute: typeof CertificationsLazyImport
      parentRoute: typeof rootRoute
    }
    '/courses': {
      id: '/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsLazyImport
      parentRoute: typeof rootRoute
    }
    '/resume': {
      id: '/resume'
      path: '/resume'
      fullPath: '/resume'
      preLoaderRoute: typeof ResumeLazyImport
      parentRoute: typeof rootRoute
    }
    '/skills': {
      id: '/skills'
      path: '/skills'
      fullPath: '/skills'
      preLoaderRoute: typeof SkillsLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/upsert-course-list': {
      id: '/admin/upsert-course-list'
      path: '/admin/upsert-course-list'
      fullPath: '/admin/upsert-course-list'
      preLoaderRoute: typeof AdminUpsertCourseListLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog/forcing-react': {
      id: '/blog/forcing-react'
      path: '/blog/forcing-react'
      fullPath: '/blog/forcing-react'
      preLoaderRoute: typeof BlogForcingReactLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog/lodash-chunk': {
      id: '/blog/lodash-chunk'
      path: '/blog/lodash-chunk'
      fullPath: '/blog/lodash-chunk'
      preLoaderRoute: typeof BlogLodashChunkLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/certifications': typeof CertificationsLazyRoute
  '/courses': typeof CoursesLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/resume': typeof ResumeLazyRoute
  '/skills': typeof SkillsLazyRoute
  '/admin/upsert-course-list': typeof AdminUpsertCourseListLazyRoute
  '/blog/$slug': typeof BlogSlugLazyRoute
  '/blog/forcing-react': typeof BlogForcingReactLazyRoute
  '/blog/lodash-chunk': typeof BlogLodashChunkLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/certifications': typeof CertificationsLazyRoute
  '/courses': typeof CoursesLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/resume': typeof ResumeLazyRoute
  '/skills': typeof SkillsLazyRoute
  '/admin/upsert-course-list': typeof AdminUpsertCourseListLazyRoute
  '/blog/$slug': typeof BlogSlugLazyRoute
  '/blog/forcing-react': typeof BlogForcingReactLazyRoute
  '/blog/lodash-chunk': typeof BlogLodashChunkLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/certifications': typeof CertificationsLazyRoute
  '/courses': typeof CoursesLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/resume': typeof ResumeLazyRoute
  '/skills': typeof SkillsLazyRoute
  '/admin/upsert-course-list': typeof AdminUpsertCourseListLazyRoute
  '/blog/$slug': typeof BlogSlugLazyRoute
  '/blog/forcing-react': typeof BlogForcingReactLazyRoute
  '/blog/lodash-chunk': typeof BlogLodashChunkLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/certifications'
    | '/courses'
    | '/projects'
    | '/resume'
    | '/skills'
    | '/admin/upsert-course-list'
    | '/blog/$slug'
    | '/blog/forcing-react'
    | '/blog/lodash-chunk'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/certifications'
    | '/courses'
    | '/projects'
    | '/resume'
    | '/skills'
    | '/admin/upsert-course-list'
    | '/blog/$slug'
    | '/blog/forcing-react'
    | '/blog/lodash-chunk'
  id:
    | '__root__'
    | '/'
    | '/certifications'
    | '/courses'
    | '/projects'
    | '/resume'
    | '/skills'
    | '/admin/upsert-course-list'
    | '/blog/$slug'
    | '/blog/forcing-react'
    | '/blog/lodash-chunk'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CertificationsLazyRoute: typeof CertificationsLazyRoute
  CoursesLazyRoute: typeof CoursesLazyRoute
  ProjectsLazyRoute: typeof ProjectsLazyRoute
  ResumeLazyRoute: typeof ResumeLazyRoute
  SkillsLazyRoute: typeof SkillsLazyRoute
  AdminUpsertCourseListLazyRoute: typeof AdminUpsertCourseListLazyRoute
  BlogSlugLazyRoute: typeof BlogSlugLazyRoute
  BlogForcingReactLazyRoute: typeof BlogForcingReactLazyRoute
  BlogLodashChunkLazyRoute: typeof BlogLodashChunkLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CertificationsLazyRoute: CertificationsLazyRoute,
  CoursesLazyRoute: CoursesLazyRoute,
  ProjectsLazyRoute: ProjectsLazyRoute,
  ResumeLazyRoute: ResumeLazyRoute,
  SkillsLazyRoute: SkillsLazyRoute,
  AdminUpsertCourseListLazyRoute: AdminUpsertCourseListLazyRoute,
  BlogSlugLazyRoute: BlogSlugLazyRoute,
  BlogForcingReactLazyRoute: BlogForcingReactLazyRoute,
  BlogLodashChunkLazyRoute: BlogLodashChunkLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/certifications",
        "/courses",
        "/projects",
        "/resume",
        "/skills",
        "/admin/upsert-course-list",
        "/blog/$slug",
        "/blog/forcing-react",
        "/blog/lodash-chunk"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/certifications": {
      "filePath": "certifications.lazy.tsx"
    },
    "/courses": {
      "filePath": "courses.lazy.tsx"
    },
    "/projects": {
      "filePath": "projects.lazy.tsx"
    },
    "/resume": {
      "filePath": "resume.lazy.tsx"
    },
    "/skills": {
      "filePath": "skills.lazy.tsx"
    },
    "/admin/upsert-course-list": {
      "filePath": "admin/upsert-course-list.lazy.tsx"
    },
    "/blog/$slug": {
      "filePath": "blog/$slug.lazy.tsx"
    },
    "/blog/forcing-react": {
      "filePath": "blog/forcing-react.lazy.tsx"
    },
    "/blog/lodash-chunk": {
      "filePath": "blog/lodash-chunk.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
